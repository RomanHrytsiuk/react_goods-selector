{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","this","className","type","classNames","onClick","setState","map","good","prevState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAyB,CACvBC,aAAc,OAFlB,4CAKE,WAAU,IAAD,OACCA,EAAiBC,KAAKF,MAAtBC,aAER,OACE,uBAAME,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACGF,EAAY,UAENA,EAFM,gBAKT,oBAIJ,wBACE,UAASA,EAAe,cAAgB,GACxCG,KAAK,SACLD,UAAWE,IACT,cACA,CAAE,aAAcJ,IAElBK,QAAS,WACP,EAAKC,SAAS,CACZN,aAAc,WAMtB,uBAAOE,UAAU,QAAjB,SACE,gCACGL,EAAMU,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRN,UAAWE,IAAW,CACpB,+BAAgCJ,IAAiBQ,IAJrD,UAOE,6BACE,wBACE,UACER,IAAiBQ,EACb,eACA,YAENL,KAAK,SACLD,UAAWE,IAAW,SAAU,CAC9B,UAAWJ,IAAiBQ,IAE9BH,QAAS,WACP,EAAKC,UAAS,SAAAG,GAAS,MAAK,CAC1BT,aAAcS,EAAUT,eAAiBQ,EACrC,GACAA,OAdV,SAkBGR,IAAiBQ,EAAQ,IAAQ,QAItC,oBAAI,UAAQ,YAAYN,UAAU,eAAlC,SACGM,MA9BEA,iBAvCrB,GAAyBE,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.489ec534.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: 'Jam',\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          {selectedGood\n            ? (\n              `${selectedGood} is selected`\n            )\n            : (\n              'No goods selected'\n            )}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy={selectedGood ? 'ClearButton' : ''}\n            type=\"button\"\n            className={classNames(\n              'delete ml-3',\n              { 'is-hidden': !selectedGood },\n            )}\n            onClick={() => {\n              this.setState({\n                selectedGood: '',\n              });\n            }}\n          />\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n                  <button\n                    data-cy={\n                      selectedGood === good\n                        ? 'RemoveButton'\n                        : 'AddButton'\n                    }\n                    type=\"button\"\n                    className={classNames('button', {\n                      'is-info': selectedGood === good,\n                    })}\n                    onClick={() => {\n                      this.setState(prevState => ({\n                        selectedGood: prevState.selectedGood === good\n                          ? ''\n                          : good,\n                      }));\n                    }}\n                  >\n                    {selectedGood === good ? ('-') : ('+')}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}